---
- name: k3s
  hosts:
    - nodes
    - clusterpis
  gather_facts: yes
  become: no

  vars:
    kubernetes:
      context: sunfire
      metallb:
        dhcp:
          start: 192.168.1.170
          end: 192.168.1.199
        memberlist: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          38636462356664393833313066353934393630653938356563633436333461373134313631373361
          6365376165623461333939383837373032626133383639340a313538366635356163373632643464
          64356435363161343032643561356336633437323836363332333639363637653436666638323135
          3862363630663339380a386236396164386234313963613065396361373437303633313037363362
          31666533633763363166316463613462643737313738636134313966353865316239623164303564
          62313362366335313336376465633538363433353463366537333232633832663064333563386363
          31323539623162646561343130653536306637626466613231356562333936656366643931323431
          39316532396364643164

  roles:

    - role: xanmanning.k3s

  pre_tasks:

    # - name: Set each node to be a control node
    #   ansible.builtin.set_fact:
    #     k3s_control_node: true
    #     k3s_control_node_address: node0
    #     k3s_primary_control_node: true
    #     k3s_etcd_datastore: true
    #     k3s_release_version: v1.20.0+k3s2
    #     k3s_become_for_all: yes
    #   when: inventory_hostname in ['node0']

    # - name: Set each node to be a control node
    #   ansible.builtin.set_fact:
    #     k3s_control_node: true
    #     k3s_control_node_address: node0
    #     k3s_primary_control_node: false
    #     k3s_etcd_datastore: true
    #     k3s_release_version: v1.20.0+k3s2
    #     k3s_become_for_all: yes
    #   when: inventory_hostname in ['node1', 'node2']

    - name: Set each node to be a control node
      ansible.builtin.set_fact:
        k3s_control_node: true
        # k3s_control_node_address: node0
        # k3s_primary_control_node: true
        # k3s_etcd_datastore: true
        k3s_release_version: v1.20.0+k3s2
        k3s_become_for_all: yes

    - name: Set each node to be a control node
      ansible.builtin.set_fact:
        k3s_control_node: false
        k3s_control_node_address: node0
        k3s_release_version: v1.20.0+k3s2
        k3s_become_for_all: yes
      when: inventory_hostname in ['node1', 'node2', 'node3', 'node4', 'node5']

    - name: Set each node to be a control node
      ansible.builtin.set_fact:
        k3s_control_node: false
        k3s_control_node_address: node0
        k3s_release_version: v1.20.0+k3s2
        k3s_become_for_all: yes
      when: inventory_hostname in ['clusterpi0', 'clusterpi1', 'clusterpi2', 'clusterpi3', 'clusterpi4', 'clusterpi5', 'clusterpi6']

    # - name: Set each node to be a control node
    #   ansible.builtin.set_fact:
    #     k3s_state: uninstalled
    #     k3s_become_for_all: yes
