- name: Install zabbix_api
  ansible.builtin.pip:
    state: present
    name: zabbix_api
  become: true

- name: Create mark admin
  community.zabbix.zabbix_user:
    server_url: "{{ server_url }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    alias: mark
    name: Mark
    surname: Mercado
    usrgrps:
      - Zabbix administrators
    passwd: "{{ mark_password }}"
    lang: en_US
    timezone: America/Detroit
    theme: dark-theme
    autologin: false
    autologout: '0'
    refresh: '30'
    rows_per_page: '200'
    after_login_url: ''
    user_medias:
      - mediatype: Email
        sendto: mamercad@gmail.com
        period: 1-7,00:00-24:00
        severity:
          not_classified: false
          information: true
          warning: true
          average: true
          high: true
          disaster: true
        active: true
      - mediatype: Slack
        sendto: "#zabbix"
        period: 1-7,00:00-24:00
        severity:
          not_classified: false
          information: true
          warning: true
          average: true
          high: true
          disaster: true
        active: true
    type: Zabbix super admin
    role_name: Super admin role
    state: present

- name: Create discovery rule with ICMP, agent, and SNMP checks
  community.zabbix.zabbix_discovery_rule:
    server_url: "{{ server_url }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    name: Cloudmason
    state: present
    iprange: 192.168.1.1-254
    dchecks:
      - type: ICMP
      - type: Zabbix
        key: "system.hostname"
        ports: "10050"
        uniq: true
        host_source: "discovery"
      - type: SNMPv2
        snmp_community: public
        ports: "161"
        key: SNMPv2-MIB::sysName.0

- name: Deploy discovery action
  community.zabbix.zabbix_action:
    server_url: "{{ server_url }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    name: Discovered device
    event_source: discovery
    state: present
    status: enabled
    esc_period: 0s
    conditions:
      - type: discovery_status
        operator: "="
        value: up
      - type: discovered_service_type
        operator: "="
        value: ICMP ping
      - type: uptime_or_downtime_duration
        operator: ">="
        value: 3600
    operations:
      - type: add_host
      - type: enable_host
      - type: link_to_template
        templates:
          - ICMP Ping

- name: Deploy agent auto-registration action
  community.zabbix.zabbix_action:
    server_url: "{{ server_url }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    name: Agent auto-registration
    event_source: auto_registration
    state: present
    status: enabled
    esc_period: 0s
    operations:
      - type: add_host

- name: Deploy Linux agent action
  community.zabbix.zabbix_action:
    server_url: "{{ server_url }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    name: Linux agent action
    event_source: auto_registration
    state: present
    status: enabled
    esc_period: 0s
    conditions:
      - type: host_metadata
        operator: like
        value: Linux
    operations:
      - type: link_to_template
        templates:
          - Linux by Zabbix agent
      - type: enable_host

- name: Create host groups
  community.zabbix.zabbix_group:
    server_url: "{{ server_url }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    state: present
    host_groups:
      - Linux servers
      - SNMP servers
      - Printers
      - Ping servers
      - UniFi devices
      - NAS devices

- name: Delete host (Zabbix server)
  community.zabbix.zabbix_host:
    server_url: "{{ server_url }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    state: absent
    host_name: Zabbix server

- name: Create linux host
  community.zabbix.zabbix_host:
    server_url: "{{ server_url }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    state: present
    host_name: "{{ item.dns }}"
    visible_name: "{{ item.dns }}"
    description: "{{ item.dns }}"
    host_groups:
      - Linux servers
    link_templates:
      - ICMP Ping
      - Linux by Zabbix agent active
    status: enabled
    interfaces:
      - port: "10050"
        type: agent
        dns: "{{ item.dns }}"
        ip: "{{ item.ip }}"
        main: 1
  loop: "{{ linux_servers }}"

- name: Create nas host
  community.zabbix.zabbix_host:
    server_url: "{{ server_url }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    state: present
    host_name: "{{ item.dns }}"
    visible_name: "{{ item.dns }}"
    description: "{{ item.dns }}"
    host_groups:
      - NAS devices
    link_templates:
      - ICMP Ping
      - Linux by Zabbix agent active
    status: enabled
    interfaces:
      - port: "10050"
        type: agent
        dns: "{{ item.dns }}"
        ip: "{{ item.ip }}"
        main: 1
  loop: "{{ nas_devices }}"

- name: Create generic snmp host
  community.zabbix.zabbix_host:
    server_url: "{{ server_url }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    state: present
    host_name: "{{ item.dns }}"
    visible_name: "{{ item.dns }}"
    description: "{{ item.dns }}"
    host_groups:
      - SNMP servers
    link_templates:
      - ICMP Ping
      - Generic SNMP
      - Interfaces SNMP
    status: enabled
    interfaces:
      - details:
          community: public
          version: 2
        port: "161"
        type: snmp
        dns: "{{ item.dns }}"
        ip: "{{ item.ip }}"
        main: 1
  loop: "{{ snmp_servers }}"
  when:
    - snmp_servers is defined

- name: Create printer snmp host
  community.zabbix.zabbix_host:
    server_url: "{{ server_url }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    state: present
    host_name: "{{ item.dns }}"
    visible_name: "{{ item.dns }}"
    description: "{{ item.dns }}"
    host_groups:
      - Printers
    link_templates:
      # - ICMP Ping
      - Generic SNMP
    status: enabled
    interfaces:
      - details:
          community: public
          version: 2
        port: "161"
        type: snmp
        dns: "{{ item.dns }}"
        ip: "{{ item.ip }}"
        main: 1
  loop: "{{ printers }}"

- name: Create ping host
  community.zabbix.zabbix_host:
    server_url: "{{ server_url }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    state: present
    host_name: "{{ item.dns }}"
    visible_name: "{{ item.dns }}"
    description: "{{ item.dns }}"
    host_groups:
      - Printers
    link_templates:
      - ICMP Ping
    status: enabled
    interfaces:
      - type: agent
        dns: "{{ item.dns }}"
        ip: "{{ item.ip }}"
        main: 1
        useip: 0
  loop: "{{ ping_servers }}"

- name: Create generic ping host
  community.zabbix.zabbix_host:
    server_url: "{{ server_url }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    state: present
    host_name: "{{ item.dns }}"
    visible_name: "{{ item.dns }}"
    description: "{{ item.dns }}"
    host_groups:
      - UniFi devices
    link_templates:
      - ICMP Ping
    status: enabled
    interfaces:
      - type: agent
        dns: "{{ item.dns }}"
        ip: "{{ item.ip }}"
        main: 1
        useip: 0
  loop: "{{ unifi_devices }}"

# - name: Create generic snmp host
#   community.zabbix.zabbix_host:
#     server_url: "{{ server_url }}"
#     login_user: "{{ login_user }}"
#     login_password: "{{ login_password }}"
#     state: present
#     host_name: "{{ item.dns }}"
#     visible_name: "{{ item.dns }}"
#     description: "{{ item.dns }}"
#     host_groups:
#       - UniFi devices
#     link_templates:
#       - Generic SNMP
#       - Interfaces SNMP
#     status: enabled
#     interfaces:
#       - details:
#           community: public
#           version: 2
#         port: "161"
#         type: snmp
#         dns: "{{ item.dns }}"
#         ip: "{{ item.ip }}"
#         main: 1
#   loop: "{{ unifi_devices }}"

- name: Import Zabbix templates from JSON
  community.zabbix.zabbix_template:
    server_url: "{{ server_url }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    state: present
    template_json: "{{ lookup('ansible.builtin.template', 'templates/zabbix/ICMP_ping.xml.j2') }}"


- name: Add Slack bot token
  community.zabbix.zabbix_mediatype:
    name: Slack
    server_url: "{{ server_url }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    type: webhook
    webhook_script: "{{ lookup('ansible.builtin.file', 'files/slack.js') }}"
    webhook_params:
      - name: alert_message
        value: "{ALERT.MESSAGE}"
      - name: alert_subject
        value: "{ALERT.SUBJECT}"
      - name: bot_token
        value: "{{ slack_bot_token }}"
      - name: channel
        value: "{ALERT.SENDTO}"
      - name: discovery_host_dns
        value: "{DISCOVERY.DEVICE.DNS}"
      - name: discovery_host_ip
        value: "{DISCOVERY.DEVICE.IP}"
      - name: event_date
        value: "{EVENT.DATE}"
      - name: event_id
        value: "{EVENT.ID}"
      - name: event_nseverity
        value: "{EVENT.NSEVERITY}"
      - name: event_opdata
        value: "{EVENT.OPDATA}"
      - name: event_recovery_date
        value: "{EVENT.RECOVERY.DATE}"
      - name: event_recovery_time
        value: "{EVENT.RECOVERY.TIME}"
      - name: event_severity
        value: "{EVENT.SEVERITY}"
      - name: event_source
        value: "{EVENT.SOURCE}"
      - name: event_tags
        value: "{EVENT.TAGS}"
      - name: event_time
        value: "{EVENT.TIME}"
      - name: event_update_date
        value: "{EVENT.UPDATE.DATE}"
      - name: event_update_status
        value: "{EVENT.UPDATE.STATUS}"
      - name: event_update_time
        value: "{EVENT.UPDATE.TIME}"
      - name: event_value
        value: "{EVENT.VALUE}"
      - name: host_conn
        value: "{HOST.CONN}"
      - name: host_name
        value: "{HOST.HOST}"
      - name: slack_as_user
        value: true
      - name: slack_mode
        value: alarm
      - name: trigger_description
        value: "{TRIGGER.DESCRIPTION}"
      - name: trigger_id
        value: "{TRIGGER.ID}"
      - name: zabbix_url
        value: "{$ZABBIX_URL}"
    process_tags: true
    event_menu: true
    event_menu_name: "Open in Slack: '{EVENT.TAGS.__channel_name}'"
    event_menu_url: '{EVENT.TAGS.__message_link}'

- name: Deploy trigger action
  community.zabbix.zabbix_action:
    server_url: "{{ server_url }}"
    login_user: "{{ login_user }}"
    login_password: "{{ login_password }}"
    name: "Send alerts to Mark"
    event_source: trigger
    state: present
    status: enabled
    esc_period: 60
    conditions:
      - type: trigger_severity
        operator: ">="
        value: Average
    operations:
      - type: send_message
        # subject: "Something bad is happening"
        # message: "Come on, guys do something"
        media_type: Slack
        send_to_users:
          - mark
