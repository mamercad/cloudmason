- name: Install the Zabbix release deb
  ansible.builtin.apt:
    state: present
    deb: "{{ zabbix_release_focal_deb }}"
  become: true
  when:
    - ansible_distribution_release == 'focal'

- name: Install Zabbix release
  ansible.builtin.apt:
    state: present
    name: zabbix-release
    update_cache: true
  become: true

- name: Install Zabbix packages
  ansible.builtin.apt:
    state: present
    name:
      - zabbix-server-mysql
      - zabbix-frontend-php
      - zabbix-apache-conf
      - zabbix-sql-scripts
      - zabbix-agent
  become: true

- name: Install snmp and snmp-mibs-downloader
  ansible.builtin.apt:
    state: present
    name:
      - snmp
      - snmp-mibs-downloader
  become: true

- name: Download UniFi MIBs
  ansible.builtin.get_url:
    url: http://dl.ubnt-ut.com/snmp/{{ item }}
    dest: /usr/share/snmp/mibs/{{ item }}.txt
    owner: root
    group: root
    mode: 0644
  loop:
    - UBNT-MIB
    - UBNT-UniFi-MIB
  become: true
  notify: restart-zabbix-server

- name: Download Lexmark MIBs
  ansible.builtin.unarchive:
    src: http://support.lexmark.com/library/LEXMARK/FA615/Lexmark_MIB_file_pack_20190502.zip
    remote_src: true
    dest: /usr/share/snmp/mibs/
    owner: root
    group: root
    mode: 0644
  become: true
  notify: restart-zabbix-server

- name: Let Ubuntu download MIBs
  ansible.builtin.replace:
    path: /etc/snmp/snmp.conf
    regexp: '^mibs :$'
    replace: '#mibs :'
  become: true
  notify: restart-zabbix-server

- name: Install python3-pymysql
  ansible.builtin.apt:
    state: present
    name: python3-pymysql
  become: true

- name: Create Zabbix database
  community.mysql.mysql_db:
    state: present
    name: zabbix
    encoding: utf8
    collation: utf8_bin
    login_unix_socket: /var/run/mysqld/mysqld.sock
  register: create_database
  become: true
  no_log: true

- name: Create zabbix database user
  community.mysql.mysql_user:
    state: present
    name: zabbix
    password: "{{ zabbix_db_password }}"
    priv: 'zabbix.*:ALL'
    login_unix_socket: /var/run/mysqld/mysqld.sock
  become: true

- name: Restore zabbix database
  community.mysql.mysql_db:
    state: import
    name: zabbix
    target: "{{ zabbix_sql_create }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  become: true
  when: create_database.changed

- name: Add 8080 to /etc/apache2/ports.conf
  ansible.builtin.lineinfile:
    path: /etc/apache2/ports.conf
    line: Listen 8080
    backup: true
  become: true
  notify: reload-apache2

- name: Deploy zabbix virtualhost config
  ansible.builtin.copy:
    dest: /etc/apache2/conf-available/zabbix.conf
    content: |
      # Define /zabbix alias, this is the default
      #<IfModule mod_alias.c>
      #    Alias / /usr/share/zabbix
      #</IfModule>
      <Directory "/usr/share/zabbix">
          Options FollowSymLinks
          AllowOverride None
          Order allow,deny
          Allow from all
          <IfModule mod_php7.c>
              php_value max_execution_time 300
              php_value memory_limit 128M
              php_value post_max_size 16M
              php_value upload_max_filesize 2M
              php_value max_input_time 300
              php_value max_input_vars 10000
              php_value always_populate_raw_post_data -1
              # php_value date.timezone Europe/Riga
          </IfModule>
      </Directory>
      <Directory "/usr/share/zabbix/conf">
          Order deny,allow
          Deny from all
          <files *.php>
              Order deny,allow
              Deny from all
          </files>
      </Directory>
      <Directory "/usr/share/zabbix/app">
          Order deny,allow
          Deny from all
          <files *.php>
              Order deny,allow
              Deny from all
          </files>
      </Directory>
      <Directory "/usr/share/zabbix/include">
          Order deny,allow
          Deny from all
          <files *.php>
              Order deny,allow
              Deny from all
          </files>
      </Directory>
      <Directory "/usr/share/zabbix/local">
          Order deny,allow
          Deny from all
          <files *.php>
              Order deny,allow
              Deny from all
          </files>
      </Directory>
    owner: root
    group: root
    backup: true
  become: true
  notify: reload-apache2

- name: Create zabbix virtualhost
  ansible.builtin.copy:
    dest: /etc/apache2/sites-available/zabbix.conf
    content: |
      <VirtualHost *:8080>
        ServerAdmin webmaster@localhost
        DocumentRoot /usr/share/zabbix
        ErrorLog ${APACHE_LOG_DIR}/zabbix.log
        CustomLog ${APACHE_LOG_DIR}/zabbix.log combined
        Include conf-available/zabbix.conf
      </VirtualHost>
    owner: root
    group: root
    backup: true
  become: true
  notify: reload-apache2

- name: Run a2ensite for zabbix
  ansible.builtin.shell:
    cmd: /usr/sbin/a2ensite zabbix
  become: true
  changed_when: false  # Don't care
  notify: reload-apache2

- name: Deploy /etc/zabbix/web/zabbix.conf.php
  ansible.builtin.template:
    src: zabbix.conf.php.j2
    dest: /etc/zabbix/web/zabbix.conf.php
    owner: www-data
    group: www-data
    mode: 0600
    backup: true
  become: true
  notify: reload-apache2

- name: Symlink /etc/zabbix/web/zabbix.conf.php
  ansible.builtin.file:
    state: link
    src: /etc/zabbix/web/zabbix.conf.php
    dest: /usr/share/zabbix/conf/zabbix.conf.php
  become: true
  notify: reload-apache2

- name: Deploy /etc/zabbix/zabbix_server.conf
  ansible.builtin.template:
    src: zabbix_server.conf.j2
    dest: /etc/zabbix/zabbix_server.conf
    owner: root
    group: root
    mode: 0600
    backup: true
  become: true
  notify: restart-zabbix-server

- name: Deploy /etc/zabbix/zabbix_agentd.conf
  ansible.builtin.template:
    src: zabbix_agentd.conf.j2
    dest: /etc/zabbix/zabbix_agentd.conf
    owner: root
    group: root
    mode: 0644
    backup: true
  become: true
  notify: restart-zabbix-agent

- name: Start and enable Zabbix stuff
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - zabbix-server
    - zabbix-agent
    - apache2
  become: true
