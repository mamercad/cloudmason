- name: Include pixelmon vars
  ansible.builtin.include_vars:
    file: pixelmon.yml

- name: Create pixelmon group
  ansible.builtin.group:
    state: present
    name: "{{ group }}"
  become: true

- name: Create pixelmon user
  ansible.builtin.user:
    state: present
    name: "{{ user }}"
    group: "{{ group }}"
    home: "{{ home }}"
    shell: /bin/bash
  become: true

- name: Install openjdk-X-jre-headless
  ansible.builtin.apt:
    state: present
    name: openjdk-{{ item }}-jre-headless
  loop:
    - 8
    - 11
  become: true

- name: Minecraft server jar
  ansible.builtin.get_url:
    url: https://launcher.mojang.com/v1/objects/1b557e7b033b583cd9f66746b7a9ab1ec1673ced/server.jar
    dest: "{{ home }}/minecraft_server.jar"
  become: true
  become_user: "{{ user }}"

- name: Deploy eula.txt
  ansible.builtin.copy:
    dest: "{{ home }}/eula.txt"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0644
    content: |
      eula=true
  become: true
  become_user: "{{ user }}"

- name: Deploy server.properties
  ansible.builtin.copy:
    dest: "{{ home }}/server.properties"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0644
    content: |
      #Minecraft server properties
      #Sat May 01 16:31:36 EDT 2021
      spawn-protection=16
      max-tick-time=60000
      query.port=25566
      generator-settings=
      sync-chunk-writes=true
      force-gamemode=false
      allow-nether=true
      enforce-whitelist=false
      gamemode=0
      broadcast-console-to-ops=true
      enable-query=false
      player-idle-timeout=0
      text-filtering-config=
      difficulty=1
      spawn-monsters=true
      broadcast-rcon-to-ops=true
      op-permission-level=4
      pvp=true
      entity-broadcast-range-percentage=100
      snooper-enabled=true
      allow-cheats=true
      level-type=default
      hardcore=false
      enable-status=true
      enable-command-block=false
      max-players=20
      network-compression-threshold=256
      resource-pack-sha1=
      max-world-size=29999984
      function-permission-level=2
      rcon.port=25576
      server-port=25566
      server-ip=
      spawn-npcs=true
      allow-flight=true
      level-name=world
      view-distance=10
      resource-pack=
      spawn-animals=true
      white-list=false
      rcon.password=hunter2
      generate-structures=true
      online-mode=true
      max-build-height=256
      level-seed=
      prevent-proxy-connections=false
      use-native-transport=true
      enable-jmx-monitoring=false
      rate-limit=0
      motd={{ gamename }}
      enable-rcon=true
  become: true
  become_user: "{{ user }}"

- name: Deploy pixelmon systemd unit
  ansible.builtin.copy:
    dest: /etc/systemd/system/pixelmon.service
    owner: root
    group: root
    mode: 0644
    content: |
      [Unit]
      Description={{ gamename }}
      After=network.target
      [Service]
      WorkingDirectory={{ home }}
      User={{ user }}
      Group={{ group }}
      Restart=always
      ExecStart=/usr/bin/screen -DmS pixelmon /usr/lib/jvm/java-8-openjdk-amd64/bin/java -Xmx2G -jar forge-1.12.2-14.23.5.2854.jar nogui
      [Install]
      WantedBy=multi-user.target
  become: true

# - name: Deploy valheim-restart systemd unit
#   ansible.builtin.copy:
#     dest: /etc/systemd/system/valheim-restart.service
#     owner: root
#     group: root
#     mode: 0644
#     content: |
#       [Unit]
#       Description=Restart Valheim
#       Wants=valheim.target
#       [Service]
#       Type=oneshot
#       ExecStart=/usr/bin/systemctl try-restart valheim.service
#       [Install]
#       WantedBy=multi-user.target
#   become: true

# - name: Deploy valheim-restart systemd timer
#   ansible.builtin.copy:
#     dest: /etc/systemd/system/valheim-restart.timer
#     owner: root
#     group: root
#     mode: 0644
#     content: |
#       [Unit]
#       Description=Restart Valheim
#       [Timer]
#       OnCalendar=weekly
#       Persistent=true
#       [Install]
#       WantedBy=timers.target
#   become: true

# - name: Deploy valheim start script
#   ansible.builtin.copy:
#     dest: "{{ home }}/start_valheim.sh"
#     owner: root
#     group: root
#     mode: 0755
#     content: |
#       #!/usr/bin/env bash
#       echo "Backing up Valheim"
#       tar czvf {{ home }}/valheim_server_Data_$(date +%s).tgz {{ home }}/valheim_server_Data
#       export templdpath=$LD_LIBRARY_PATH
#       export LD_LIBRARY_PATH=./linux64:$LD_LIBRARY_PATH
#       # export SteamAppId=892970
#       echo "Starting server PRESS CTRL-C to exit"
#       ./valheim_server.x86_64 -name "{{ gamename }}" -port "{{ port }}" -world "Dedicated" -password "{{ gamepass }}"
#       export LD_LIBRARY_PATH=$templdpath
#   become: true


# - name: Accept Steam license
#   ansible.builtin.debconf:
#     name: steamcmd
#     question: steamcmd/question
#     value: I AGREE
#     vtype: select
#   become: true

# - name: Install steamcmd
#   ansible.builtin.apt:
#     state: present
#     name: steamcmd
#   become: true

# - name: Install valheim
#   ansible.builtin.shell:
#     cmd: |
#       /usr/games/steamcmd +login anonymous +force_install_dir /home/valheim +app_update 896660 validate +exit
#   become: true
#   become_user: valheim

# - name: Reload systemd
#   ansible.builtin.systemd:
#     daemon_reload: true
#   become: true

- name: Start and enable pixelmon.service
  ansible.builtin.systemd:
    name: pixelmon.service
    state: started
    enabled: true
  become: true

# - name: Start and enable valheim-restart.service
#   ansible.builtin.systemd:
#     name: valheim-restart.service
#     state: started
#     enabled: true
#   become: true

# - name: Start and enable valheim-retart.timer
#   ansible.builtin.systemd:
#     name: valheim-restart.timer
#     state: started
#     enabled: true
#   become: true
