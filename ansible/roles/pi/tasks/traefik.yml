---

- name: Create the traefik group
  group:
    name: traefik
  become: true

- name: Create the traefik user
  user:
    name: traefik
    group: traefik
    create_home: true
    shell: /bin/bash
  become: true

- name: Pull down the traefik binary tarball
  get_url:
    url: https://github.com/traefik/traefik/releases/download/v2.3.5/traefik_v2.3.5_linux_armv7.tar.gz
    checksum: sha256:853af73c985b32bcc17f7292b111ced0e93882362f819f1e3a65ef22f4fd5f51
    dest: /home/traefik/traefik_v2.3.5_linux_armv7.tar.gz
    owner: traefik
    group: traefik
    mode: 0644
  when:
    - ansible_architecture == 'armv7l'
  become: true

- name: Pull down the traefik binary tarball
  get_url:
    url: https://github.com/traefik/traefik/releases/download/v2.3.6/traefik_v2.3.6_linux_amd64.tar.gz
    checksum: sha256:f9067f9c82d1d7aa0b5234265c3cb197f08c7823e49da02ad68be6df2d090534
    dest: /home/traefik/traefik_v2.3.6_linux_amd64.tar.gz
    owner: traefik
    group: traefik
    mode: 0644
  when:
    - ansible_architecture == 'x86_64'
  become: true

- name: Extract the traefik tarball
  unarchive:
    src: /home/traefik/traefik_v2.3.5_linux_armv7.tar.gz
    dest: /home/traefik
    remote_src: true
    owner: traefik
    group: traefik
    creates: /home/traefik/traefik
  when:
    - ansible_architecture == 'armv7l'
  become: true

- name: Extract the traefik tarball
  unarchive:
    src: /home/traefik/traefik_v2.3.6_linux_amd64.tar.gz
    dest: /home/traefik
    remote_src: true
    owner: traefik
    group: traefik
    creates: /home/traefik/traefik
  when:
    - ansible_architecture == 'x86_64'
  become: true

- name: Deploy traefik.toml
  copy:
    dest: /home/traefik/traefik.toml
    owner: traefik
    group: traefik
    mode: 0644
    content: |
      defaultEntryPoints = ["http", "https"]

      [entryPoints]
        [entryPoints.http]
          address = ":80"
          [entryPoints.http.http.redirections]
            [entryPoints.http.http.redirections.entryPoint]
              to = "https"
              scheme = "https"
        [entryPoints.https]
          address = ":443"

      [providers]
        [providers.file]
          filename = "/home/traefik/traefik_dynamic.toml"

      [certificatesResolvers.myresolver.acme]
        email = "{{ traefik.cloudflare.api.email }}"
        storage = "/home/traefik/acme.json"
        # caServer = "https://acme-staging-v02.api.letsencrypt.org/directory"
        caServer = "https://acme-v02.api.letsencrypt.org/directory"
        [certificatesResolvers.myresolver.acme.dnsChallenge]
          provider = "cloudflare"
          delayBeforeCheck = 0
          resolvers = ["1.1.1.1:53", "8.8.8.8:53"]

      [log]
        filePath = "/home/traefik/traefik.log"
        level = "WARN"
  notify: Restart traefik
  become: true

- name: Deploy traefik_dynamic.toml
  copy:
    dest: /home/traefik/traefik_dynamic.toml
    owner: traefik
    group: traefik
    mode: 0644
    content: |
      [http]
        [http.routers]
          [http.routers.apex]
            rule = "Host(`cloudmason.org`)"
            service = "apex"
            [http.routers.apex.tls]
              certResolver = "myresolver"
              [[http.routers.apex.tls.domains]]
                main = "cloudmason.org"
                sans = ["*.cloudmason.org"]
          [http.routers.awx]
            rule = "Host(`awx.cloudmason.org`)"
            service = "awx"
            [http.routers.awx.tls]
          [http.routers.awx-dev]
            rule = "Host(`awx-dev.cloudmason.org`)"
            service = "awx-dev"
            [http.routers.awx-dev.tls]
          [http.routers.zabbix]
            rule = "Host(`zabbix.cloudmason.org`)"
            service = "zabbix"
            [http.routers.zabbix.tls]
          [http.routers.concourse]
            rule = "Host(`concourse.cloudmason.org`)"
            service = "concourse"
            [http.routers.concourse.tls]
          [http.routers.grafana]
            rule = "Host(`grafana.cloudmason.org`)"
            service = "grafana"
            [http.routers.grafana.tls]
          [http.routers.prometheus]
            rule = "Host(`prometheus.cloudmason.org`)"
            service = "prometheus"
            [http.routers.prometheus.tls]
          [http.routers.web]
            rule = "Host(`web.cloudmason.org`)"
            service = "web"
            [http.routers.web.tls]
          [http.routers.www]
            rule = "Host(`www.cloudmason.org`)"
            service = "www"
            [http.routers.www.tls]
          [http.routers.unifi]
            rule = "Host(`unifi.cloudmason.org`)"
            service = "unifi"
            [http.routers.unifi.tls]
          [http.routers.nzbget]
            rule = "Host(`nzbget.cloudmason.org`)"
            # middlewares = ["admin-user"]
            service = "nzbget"
            [http.routers.nzbget.tls]
          [http.routers.sonarr]
            rule = "Host(`sonarr.cloudmason.org`)"
            # middlewares = ["admin-user"]
            service = "sonarr"
            [http.routers.sonarr.tls]
          [http.routers.radarr]
            rule = "Host(`radarr.cloudmason.org`)"
            # middlewares = ["admin-user"]
            service = "radarr"
            [http.routers.radarr.tls]
          [http.routers.thelounge]
            rule = "Host(`thelounge.cloudmason.org`)"
            service = "thelounge"
            [http.routers.thelounge.tls]

        [http.middlewares]
          [http.middlewares.admin-user.basicAuth]
            users = ["{{ traefik.admin.username }}:{{ traefik.admin.password }}"]

        [http.services]
          [http.services.apex.loadBalancer]
            [[http.services.apex.loadBalancer.servers]]
              url = "http://cloudmason.org:8000/"
          [http.services.awx.loadBalancer]
            [[http.services.awx.loadBalancer.servers]]
              url = "http://awx.lenovo.cloudmason.org:80/"
          [http.services.awx-dev.loadBalancer]
            [[http.services.awx-dev.loadBalancer.servers]]
              url = "http://awx-service.awx.thinkpad.cloudmason.org:80/"
          [http.services.zabbix.loadBalancer]
            [[http.services.zabbix.loadBalancer.servers]]
              url = "http://thinkpad.cloudmason.org:80/zabbix/"
          [http.services.concourse.loadBalancer]
            [[http.services.concourse.loadBalancer.servers]]
              url = "http://concourse.lenovo.cloudmason.org:8080/"
          [http.services.grafana.loadBalancer]
            [[http.services.grafana.loadBalancer.servers]]
              url = "http://grafana.jonagold.cloudmason.org:3000/"
          [http.services.prometheus.loadBalancer]
            [[http.services.prometheus.loadBalancer.servers]]
              url = "http://prometheus.jonagold.cloudmason.org:9090/"
          [http.services.web.loadBalancer]
            [[http.services.web.loadBalancer.servers]]
              url = "http://web.cloudmason.org:8000/"
          [http.services.www.loadBalancer]
            [[http.services.www.loadBalancer.servers]]
              url = "http://web.cloudmason.org:8000/"
          [http.services.unifi.loadBalancer]
            [[http.services.unifi.loadBalancer.servers]]
              url = "https://cloudkey2.cloudmason.org:8443/"
          [http.services.nzbget.loadBalancer]
            [[http.services.nzbget.loadBalancer.servers]]
              url = "http://qnap.cloudmason.org:11000/"
          [http.services.sonarr.loadBalancer]
            [[http.services.sonarr.loadBalancer.servers]]
              url = "http://qnap.cloudmason.org:11001/"
          [http.services.radarr.loadBalancer]
            [[http.services.radarr.loadBalancer.servers]]
              url = "http://qnap.cloudmason.org:11002/"
          [http.services.thelounge.loadBalancer]
            [[http.services.thelounge.loadBalancer.servers]]
              url = "http://lenovo.cloudmason.org:9000/"

      [tls.options]
        [tls.options.default]
          minVersion = "VersionTLS12"
        [tls.options.mintls13]
          minVersion = "VersionTLS13"
  notify: Restart traefik
  become: true

- name: Give net priv ports to the traefik binary
  community.general.capabilities:
    path: /home/traefik/traefik
    capability: cap_net_bind_service=+ep
    state: present
  become: true

- name: Deploy the traefik systemd unit file
  copy:
    dest: /etc/systemd/system/traefik.service
    owner: root
    group: root
    mode: 0644
    content: |
      [Unit]
      Description=Traefik
      Documentation=https://doc.traefik.io/traefik/

      [Service]
      User=traefik
      AmbientCapabilities=CAP_NET_BIND_SERVICE
      Type=notify
      Environment=CF_DNS_API_TOKEN={{ traefik.cloudflare.api.key }}
      ExecStart=/home/traefik/traefik --configFile=/home/traefik/traefik.toml
      Restart=always
      WatchdogSec=1s

      [Install]
      WantedBy=multi-user.target
  become: true

- name: Start and enable traefik
  systemd:
    name: traefik
    state: started
    enabled: true
    daemon_reload: true
  become: true
