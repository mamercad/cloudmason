---
- user:
    name: stanley
    state: present
- authorized_key:
    user: stanley
    state: present
    key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDdYd3qOf8Ew7sWVniXXSQrn303ZH2z+ffyDqeVVWWjiEZbSCbfPL4OyTMEOZKcx6hn3VeDxQBvzLcmzwlz8/yrWoHGvG2ysjyP1tyWbl603aT/1qGC/3krQ+OmJSHU+UZwS2GyPaOQpyfeN799eglOY7bUeR80je/sxQSUzRFaJ7C16iHWtso7caJoKz+LB3xRQxgnj8YE+FSzmSk+hUn/WSzTAbp6K+e18YCmlRkUVFrTYLxy2EDLvO0cziPD6A91Kyp39cNbIiFDhifIeepxD6PrPotnh4UPbvoDZUci8v37kdTn2nbsn6fRkE2qJ7O+WEds0yl/xxilz9F3t0VD2SX5lBQrWD6JMIRwGj53d2lCzNw8K4SutZ/KCJazqqOdMoYTXkY3p4dkyUz37j4NLpEo5gkaTBwVdTHOEbz6f8NFsnVvDEFB6oTHXhVMbjCDoUofnmgX5K4swK7kWafInO5OhTXyJIAd0QOOsnmfpdaY61AcHx1eMqyVjQmHqqxU2dOYn6V4AItOxfY8TvJBy4EEenvETk1Jfg+kJ3f2x+D8BW99oEHItq92/oiPkmFrcGIKqa9uLQTkN5NjMiV3fqbWBBgtmMUFiDQ0vjXsthiwKzhMw/+ODQzpZYh0rUEApcxlZh/qm8o+N7waOwP0MOkrOpkZVhmv1Cagv7nuqQ== stanley@lenovo.cloudmason.org
# - package:
#     name: epel-release
#     state: present
# - selinux:
#     policy: targeted
#     state: permissive
# - rpm_key:
#     state: present
#     key: https://www.mongodb.org/static/pgp/server-3.4.asc
# - yum_repository:
#     name: mongodb-org-3.4
#     description: MongoDB Repository
#     baseurl: https://repo.mongodb.org/yum/redhat/7/mongodb-org/3.4/x86_64/
#     gpgcheck: yes
#     enabled: yes
#     gpgkey: https://www.mongodb.org/static/pgp/server-3.4.asc 
# - package:
#     name:
#       - crudini
#       - mongodb-org
#       - rabbitmq-server
#       - postgresql-server
#       - postgresql-contrib
#       - postgresql-devel
#       - redhat-lsb-core
#     state: present
# - service:
#     name: rabbitmq-server
#     state: started
#     enabled: yes
# - shell: stat /var/lib/pgsql/data/base
#   register: pgdb
# - shell: postgresql-setup initdb
#   when: pgdb.rc != 0
# - postgresql_pg_hba:
#     dest: /var/lib/pgsql/data/pg_hba.conf
#     contype: host
#     users: all
#     source: ::1/128
#     databases: all
#     method: md5
#     create: true
# - postgresql_pg_hba:
#     dest: /var/lib/pgsql/data/pg_hba.conf
#     contype: host
#     users: all
#     source: 127.0.0.1/32
#     databases: all
#     method: md5
#     create: true
# - service:
#     name: postgresql
#     state: started
#     enabled: yes
# - yum_repository:
#     name: StackStorm_stable
#     description: StackStorm_stable
#     baseurl: https://packagecloud.io/StackStorm/stable/el/7/$basearch
#     gpgcheck: yes
#     enabled: yes
#     gpgkey: https://packagecloud.io/StackStorm/stable/gpgkey
# - yum_repository:
#     name: StackStorm_stable-source
#     description: StackStorm_stable-source
#     baseurl: https://packagecloud.io/StackStorm/stable/el/7/SRPMS
#     gpgcheck: yes
#     enabled: yes
#     gpgkey: https://packagecloud.io/StackStorm/stable/gpgkey
# - package:
#     name:
#       - st2
#       - st2mistral
#     state: present
# # - shell: |
# #     DATASTORE_ENCRYPTION_KEYS_DIRECTORY="/etc/st2/keys"
# #     DATASTORE_ENCRYPTION_KEY_PATH="${DATASTORE_ENCRYPTION_KEYS_DIRECTORY}/datastore_key.json"
# #     sudo mkdir -p ${DATASTORE_ENCRYPTION_KEYS_DIRECTORY}
# #     sudo st2-generate-symmetric-crypto-key --key-path ${DATASTORE_ENCRYPTION_KEY_PATH}
# #     # Make sure only st2 user can read the file
# #     sudo chgrp st2 ${DATASTORE_ENCRYPTION_KEYS_DIRECTORY}
# #     sudo chmod o-r ${DATASTORE_ENCRYPTION_KEYS_DIRECTORY}
# #     sudo chgrp st2 ${DATASTORE_ENCRYPTION_KEY_PATH}
# #     sudo chmod o-r ${DATASTORE_ENCRYPTION_KEY_PATH}
# #     # set path to the key file in the config
# #     sudo crudini --set /etc/st2/st2.conf keyvalue encryption_key_path ${DATASTORE_ENCRYPTION_KEY_PATH}
# #     sudo st2ctl restart-component st2api
# # - shell: |
# #     # Create Mistral DB in PostgreSQL
# #     cat << EHD | sudo -u postgres psql
# #     CREATE ROLE mistral WITH CREATEDB LOGIN ENCRYPTED PASSWORD 'StackStorm';
# #     CREATE DATABASE mistral OWNER mistral;
# #     EHD
# #     # Setup Mistral DB tables, etc.
# #     /opt/stackstorm/mistral/bin/mistral-db-manage --config-file /etc/mistral/mistral.conf upgrade head
# #     # Register mistral actions
# #     /opt/stackstorm/mistral/bin/mistral-db-manage --config-file /etc/mistral/mistral.conf populate | grep -v -e openstack -e keystone -e ironicclient
# # - shell: |
# #     # Create an SSH system user (default `stanley` user may already exist)
# #     sudo useradd stanley
# #     sudo mkdir -p /home/stanley/.ssh
# #     sudo chmod 0700 /home/stanley/.ssh
# #     # Generate ssh keys
# #     sudo ssh-keygen -f /home/stanley/.ssh/stanley_rsa -P ""
# #     # Authorize key-based access
# #     sudo sh -c 'cat /home/stanley/.ssh/stanley_rsa.pub >> /home/stanley/.ssh/authorized_keys'
# #     sudo chown -R stanley:stanley /home/stanley/.ssh
# #     # Enable passwordless sudo
# #     sudo sh -c 'echo "stanley    ALL=(ALL)       NOPASSWD: SETENV: ALL" >> /etc/sudoers.d/st2'
# #     sudo chmod 0440 /etc/sudoers.d/st2
# #     # Make sure `Defaults requiretty` is disabled in `/etc/sudoers`
# #     sudo sed -i -r "s/^Defaults\s+\+?requiretty/# Defaults +requiretty/g" /etc/sudoers
# # - shell: |
# #     st2ctl start
# #     st2ctl reload
# - rpm_key:
#     state: present
#     key: http://nginx.org/keys/nginx_signing.key
# - yum_repository:
#     name: nginx
#     description: nginx
#     baseurl: http://nginx.org/packages/rhel/\\\$releasever/x86_64/
#     gpgcheck: yes
#     enabled: yes
#     gpgkey: http://nginx.org/keys/nginx_signing.key
# - shell: |
#     sudo sed -i 's/^\(enabled=1\)$/exclude=nginx\n\1/g' /etc/yum.repos.d/epel.repo
# - package:
#     name:
#       - nginx
#       - st2web
#     state: present
# # - shell: |
# #     # Generate a self-signed certificate or place your existing certificate under /etc/ssl/st2
# #     sudo mkdir -p /etc/ssl/st2
# #     sudo openssl req -x509 -newkey rsa:2048 -keyout /etc/ssl/st2/st2.key -out /etc/ssl/st2/st2.crt \
# #       -days 365 -nodes -subj "/C=US/ST=California/L=Palo Alto/O=StackStorm/OU=Information \
# #       Technology/CN=$(hostname)"
# #     # Copy and enable the supplied nginx config file
# #     sudo cp /usr/share/doc/st2/conf/nginx/st2.conf /etc/nginx/conf.d/
# #     # Disable default_server configuration in existing /etc/nginx/nginx.conf
# #     sudo sed -i 's/default_server//g' /etc/nginx/nginx.conf
# - service:
#     name: nginx
#     state: started
#     enabled: yes
