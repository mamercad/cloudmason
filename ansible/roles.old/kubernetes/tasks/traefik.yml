- name: Create traefik ClusterRole
  community.kubernetes.k8s:
    state: present
    context: "{{ kubernetes.context }}"
    definition:
      apiVersion: rbac.authorization.k8s.io/v1beta1
      kind: ClusterRole
      metadata:
        name: traefik-ingress-controller
      rules:
        - apiGroups:
            - ""
          resources:
            - services
            - endpoints
            - secrets
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - extensions
          resources:
            - ingresses
          verbs:
            - get
            - list
            - watch
        - apiGroups:
          - extensions
          resources:
          - ingresses/status
          verbs:
          - update

- name: Create traefik ClusterRoleBinding
  community.kubernetes.k8s:
    state: present
    context: "{{ kubernetes.context }}"
    definition:
      kind: ClusterRoleBinding
      apiVersion: rbac.authorization.k8s.io/v1beta1
      metadata:
        name: traefik-ingress-controller
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: traefik-ingress-controller
      subjects:
      - kind: ServiceAccount
        name: traefik-ingress-controller
        namespace: kube-system

- name: Create traefik ServiceAccount
  community.kubernetes.k8s:
    state: present
    context: "{{ kubernetes.context }}"
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: traefik-ingress-controller
        namespace: kube-system

- name: Create traefik Deployment
  community.kubernetes.k8s:
    state: present
    context: "{{ kubernetes.context }}"
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: traefik-ingress-controller
        namespace: kube-system
        labels:
          k8s-app: traefik-ingress-lb
      spec:
        replicas: 1
        selector:
          matchLabels:
            k8s-app: traefik-ingress-lb
        template:
          metadata:
            labels:
              k8s-app: traefik-ingress-lb
              name: traefik-ingress-lb
          spec:
            serviceAccountName: traefik-ingress-controller
            terminationGracePeriodSeconds: 60
            containers:
            - image: traefik:v1.7
              name: traefik-ingress-lb
              ports:
              - name: http
                containerPort: 80
              - name: admin
                containerPort: 8080
              args:
              - --api
              - --kubernetes
              - --logLevel=INFO

- name: Create traefik Service
  community.kubernetes.k8s:
    state: present
    context: "{{ kubernetes.context }}"
    definition:
      kind: Service
      apiVersion: v1
      metadata:
        name: traefik-ingress-service
        namespace: kube-system
      spec:
        selector:
          k8s-app: traefik-ingress-lb
        ports:
          - protocol: TCP
            port: 80
            name: web
          - protocol: TCP
            port: 8080
            name: admin
        type: LoadBalancer

- name: Create hello-world Ingress
  community.kubernetes.k8s:
    state: present
    context: "{{ kubernetes.context }}"
    definition:
      apiVersion: extensions/v1beta1
      kind: Ingress
      metadata:
        name: hello-world
        namespace: hello-world
        annotations:
          kubernetes.io/ingress.class: traefik
      spec:
        rules:
        - host: hello-world.{{ kubernetes.context }}.cloudmason.org
          http:
            paths:
            - path: /
              backend:
                serviceName: hello-world
                servicePort: http
