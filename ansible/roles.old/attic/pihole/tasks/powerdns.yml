---

- name: Configure upstream PowerDNS repositories
  block:

    - name: Add PowerDNS apt GPG key
      apt_key:
        state: present
        id: "{{ powerdns_gpg_key_id }}"
        keyserver: keys.gnupg.net

    - name: Add PowerDNS recursor repository
      apt_repository:
        state: present
        repo: deb http://repo.powerdns.com/raspbian {{ ansible_distribution_release }}-rec-{{ powerdns_version | replace('.', '') }} main

    - name: Add PowerDNS authoritative server repository
      apt_repository:
        state: present
        repo: deb http://repo.powerdns.com/raspbian {{ ansible_distribution_release }}-auth-{{ powerdns_version | replace('.', '') }} main

    - name: Add pin-priority for PowerDNS packages
      copy:
        dest: /etc/apt/preferences.d/pdns
        owner: root
        group: root
        mode: 0644
        content: |
          Package: pdns-*
          Pin: origin repo.powerdns.com
          Pin-Priority: 600

  when:
    - ansible_architecture == 'armv7l'
    - ansible_distribution_release == 'buster'
  become: yes

- name: Install pdns-server, pdns-backend-mysql, pdns-recursor, mysql-server
  block:

    - name: Disable avahi-daemon
      systemd:
        state: stopped
        enabled: no
        name: avahi-daemon
      ignore_errors: yes

    - name: Disable systemd-resolved
      systemd:
        state: stopped
        enabled: no
        name: systemd-resolved

    - name: Deploy /etc/resolv.conf
      copy:
        dest: /etc/resolv.conf
        owner: root
        group: root
        mode: 0644
        content: |
          search cloudmason.org
          nameserver 192.168.1.1

    - name: Install pdns-server, pdns-backend-mysql, pdns-recursor, default-mysql-server
      apt:
        state: present
        name:
          - pdns-server
          - pdns-backend-mysql
          - pdns-recursor
          - default-mysql-server

    - name: Deploy /etc/powerdns/recursor.conf
      copy:
        dest: /etc/powerdns/recursor.conf
        owner: pdns
        group: root
        mode: 0640
        content: |
          api-key={{ powerdns_api_key }}
          webserver=yes
          webserver-address=0.0.0.0
          webserver-port=8082
          webserver-allow-from=0.0.0.0/0
          webserver-password={{ powerdns_web_password }}
          local-address=0.0.0.0:53
          serve-rfc1918=no
          forward-zones=cloudmason.org=127.0.0.1:5353,1.168.192.in-addr.arpa=127.0.0.1:5353
          # forward-zones+=another.example.com=127.0.0.1:5300
      notify: Restart pdns-recursor

    - name: Start and enable pdns-recursor
      systemd:
        name: pdns-recursor
        state: started
        enabled: yes

    - name: Install python3-pymysql
      apt:
        state: present
        name: python3-pymysql

    - name: Create PowerDNS database
      community.mysql.mysql_db:
        state: present
        name: pdns
        check_implicit_admin: yes
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Create PowerDNS user
      community.mysql.mysql_user:
        state: present
        name: pdns
        password: "{{ powerdns_mysql_password }}"
        priv: 'pdns.*:ALL'
        check_implicit_admin: yes
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Create PowerDNS schema
      community.mysql.mysql_query:
        login_db: pdns
        login_unix_socket: /var/run/mysqld/mysqld.sock
        query:
          - CREATE TABLE IF NOT EXISTS domains (
              id                    INT AUTO_INCREMENT,
              name                  VARCHAR(255) NOT NULL,
              master                VARCHAR(128) DEFAULT NULL,
              last_check            INT DEFAULT NULL,
              type                  VARCHAR(6) NOT NULL,
              notified_serial       INT DEFAULT NULL,
              account               VARCHAR(40) CHARACTER SET 'utf8' DEFAULT NULL,
              PRIMARY KEY (id)
            ) Engine=InnoDB CHARACTER SET 'latin1';
          - ALTER TABLE domains ADD INDEX (name);
          - CREATE TABLE IF NOT EXISTS records (
              id                    BIGINT AUTO_INCREMENT,
              domain_id             INT DEFAULT NULL,
              name                  VARCHAR(255) DEFAULT NULL,
              type                  VARCHAR(10) DEFAULT NULL,
              content               VARCHAR(64000) DEFAULT NULL,
              ttl                   INT DEFAULT NULL,
              prio                  INT DEFAULT NULL,
              change_date           INT DEFAULT NULL,
              disabled              TINYINT(1) DEFAULT 0,
              ordername             VARCHAR(255) BINARY DEFAULT NULL,
              auth                  TINYINT(1) DEFAULT 1,
              PRIMARY KEY (id)
            ) Engine=InnoDB CHARACTER SET 'latin1';
          - ALTER TABLE records ADD INDEX (name, type);
          - ALTER TABLE records ADD INDEX (domain_id);
          - ALTER TABLE records ADD INDEX (ordername);
          - CREATE TABLE IF NOT EXISTS supermasters (
              ip                    VARCHAR(64) NOT NULL,
              nameserver            VARCHAR(255) NOT NULL,
              account               VARCHAR(40) CHARACTER SET 'utf8' NOT NULL,
              PRIMARY KEY (ip, nameserver)
            ) Engine=InnoDB CHARACTER SET 'latin1';
          - CREATE TABLE IF NOT EXISTS comments (
              id                    INT AUTO_INCREMENT,
              domain_id             INT NOT NULL,
              name                  VARCHAR(255) NOT NULL,
              type                  VARCHAR(10) NOT NULL,
              modified_at           INT NOT NULL,
              account               VARCHAR(40) CHARACTER SET 'utf8' DEFAULT NULL,
              comment               TEXT CHARACTER SET 'utf8' NOT NULL,
              PRIMARY KEY (id)
            ) Engine=InnoDB CHARACTER SET 'latin1';
          - ALTER TABLE comments ADD INDEX (name, type);
          - ALTER TABLE comments ADD INDEX (domain_id, modified_at);
          - CREATE TABLE IF NOT EXISTS domainmetadata (
              id                    INT AUTO_INCREMENT,
              domain_id             INT NOT NULL,
              kind                  VARCHAR(32),
              content               TEXT,
              PRIMARY KEY (id)
            ) Engine=InnoDB CHARACTER SET 'latin1';
          - ALTER TABLE domainmetadata ADD INDEX (domain_id, kind);
          - CREATE TABLE IF NOT EXISTS cryptokeys (
              id                    INT AUTO_INCREMENT,
              domain_id             INT NOT NULL,
              flags                 INT NOT NULL,
              active                BOOL,
              content               TEXT,
              PRIMARY KEY(id)
            ) Engine=InnoDB CHARACTER SET 'latin1';
          - ALTER TABLE cryptokeys ADD INDEX (domain_id);
          - CREATE TABLE IF NOT EXISTS tsigkeys (
              id                    INT AUTO_INCREMENT,
              name                  VARCHAR(255),
              algorithm             VARCHAR(50),
              secret                VARCHAR(255),
              PRIMARY KEY (id)
            ) Engine=InnoDB CHARACTER SET 'latin1';
          - ALTER TABLE tsigkeys ADD UNIQUE INDEX (name, algorithm);

    - name: Deploy /etc/powerdns/pdns.conf
      copy:
        dest: /etc/powerdns/pdns.conf
        owner: pdns
        group: root
        mode: 0640
        content: |
          local-address=0.0.0.0:5353
          api=yes
          api-key={{ powerdns_api_key }}
          webserver=yes
          webserver-address=0.0.0.0
          webserver-allow-from=0.0.0.0/0
          webserver-password={{ powerdns_web_password }}
          launch=gmysql
          gmysql-socket=/var/run/mysqld/mysqld.sock
          gmysql-dbname=pdns
          gmysql-user=pdns
          gmysql-password={{ powerdns_mysql_password }}
      notify: Restart pdns

    - name: Start and enable pdns
      systemd:
        name: pdns
        state: started
        enabled: yes

    - name: Deploy /etc/resolv.conf
      copy:
        dest: /etc/resolv.conf
        owner: root
        group: root
        mode: 0644
        content: |
          search cloudmason.org
          nameserver 127.0.0.1

  when:
    - ansible_architecture == 'armv7l'
    - ansible_distribution_release == 'buster'
  become: yes
